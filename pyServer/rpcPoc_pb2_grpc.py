# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import rpcPoc_pb2 as rpcPoc__pb2


class CallStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecPythonSerialize = channel.unary_unary(
                '/Call/ExecPythonSerialize',
                request_serializer=rpcPoc__pb2.ExecPythonSerializeRequest.SerializeToString,
                response_deserializer=rpcPoc__pb2.ResultByte.FromString,
                )
        self.CheckPythonSerialize = channel.unary_unary(
                '/Call/CheckPythonSerialize',
                request_serializer=rpcPoc__pb2.ExecPythonSerializeRequest.SerializeToString,
                response_deserializer=rpcPoc__pb2.ResultByte.FromString,
                )
        self.healthCheck = channel.unary_unary(
                '/Call/healthCheck',
                request_serializer=rpcPoc__pb2.ResultByte.SerializeToString,
                response_deserializer=rpcPoc__pb2.ResultByte.FromString,
                )


class CallServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecPythonSerialize(self, request, context):
        """执行
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPythonSerialize(self, request, context):
        """校验
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def healthCheck(self, request, context):
        """测试
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CallServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExecPythonSerialize': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecPythonSerialize,
                    request_deserializer=rpcPoc__pb2.ExecPythonSerializeRequest.FromString,
                    response_serializer=rpcPoc__pb2.ResultByte.SerializeToString,
            ),
            'CheckPythonSerialize': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPythonSerialize,
                    request_deserializer=rpcPoc__pb2.ExecPythonSerializeRequest.FromString,
                    response_serializer=rpcPoc__pb2.ResultByte.SerializeToString,
            ),
            'healthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.healthCheck,
                    request_deserializer=rpcPoc__pb2.ResultByte.FromString,
                    response_serializer=rpcPoc__pb2.ResultByte.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Call', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Call(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecPythonSerialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Call/ExecPythonSerialize',
            rpcPoc__pb2.ExecPythonSerializeRequest.SerializeToString,
            rpcPoc__pb2.ResultByte.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPythonSerialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Call/CheckPythonSerialize',
            rpcPoc__pb2.ExecPythonSerializeRequest.SerializeToString,
            rpcPoc__pb2.ResultByte.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def healthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Call/healthCheck',
            rpcPoc__pb2.ResultByte.SerializeToString,
            rpcPoc__pb2.ResultByte.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
